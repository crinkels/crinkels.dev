{% extends "layouts/base.njk" %}
{% block content %}

<main class="center --width-4 pl-1 pr-1 | flex-grow | flex-col --gap-000 | mb-3">
  {% if Pdraft %} <span class="bg-primary text-color-0 size-2 pl-0 pr-0">DRAFT</span> {% endif %}
  <h1 class="overline">{{ title }}</h1>
  {% include "components/tag-list.njk" %}
  <time datetime="{{ page.date }}" class="size-00 text-color-1 slash | separator pb-2 mb-2">{{ page.date | readableDate }}</time>
  <div class="relative | sidebar --right --width-00 --content-wide --gap-3 | fade-in">
    <article class="post | center --width-3 | stack --gap-2 | separator pb-3">
      {{ content | safe }}
    </article>

    {% set toc = content | getPostHeaders %}
    {% if toc | length %}
    <nav class="toc | sticky | stack --gap-000 self-start">
    <span class="size-00 uppercase sans-serif bold">Table of contents</span>
      <ul class="content-table" role="list">
        {% for header in toc %}
        <li class="pb-00 lh-0" data-active="true">
          <a href="#{{ header.id }}" class="size-00 no-decoration text-color-0">
            {{ header.title }}
          </a>
        </li>
        {% endfor %}
      </ul>
    </nav>
    {% endif %}
  </div>
</main>


{% set nextPost = collections.posts | getNextCollectionItem(page) %}
{% set previousPost = collections.posts | getPreviousCollectionItem(page) %}

<aside class="switcher --width-1 --gap-1 | p-1 mb-0">
	{% if previousPost %}
    <div class="flex-col --gap-none items-start">
      <span class="text-color-1 uppercase no-decoration">← Previous</span>
      <h3 class="size-1"><a href="{{ previousPost.url | url }}">{{ previousPost.data.title }}</a></h3>
    </div>
	{% endif %}
  {% if nextPost %}
    <div class="flex-col --gap-none items-end justify-center | text-right">
      <span class="text-color-1 uppercase no-decoration">Next →</span>
      <h3 class="size-1"><a href="{{ nextPost.url | url }}">{{ nextPost.data.title }}</a></h3>
    </div>
	{% endif %}
</aside>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const id = entry.target.getAttribute('id');
      const el = document.querySelector(`nav li a[href="#${id}"]`);
      if (!el) return;
      if (entry.intersectionRatio > 0) el.parentElement.dataset.active = true;
      else el.parentElement.dataset.active = false;
    });
  });
  // Track all sections that have an `id` applied
  document.querySelectorAll('h2[id]').forEach((header) => {
    observer.observe(header);
  });
</script>

{% endblock %}