// keyword: const, return, etc.
// operator: ==, >=, etc.
// punctuation: (, ), [, ], etc.
// parameter: inside function
// tag: <html tag/>
// function: object.fn
// string, number: primitives

.token {
	color: var(--color-grey-0);
}

// .token.attr-name, .token.builtin, .token.char, .token.inserted, .token.selector, .token.string

.token.builtin,
.token.variable,
.token.operator,
.token.punctuation,
.token.attr-name,
.token.comment,
.token.keyword,
.token.important {
	color: var(--color-grey-2);
}

.token.comment,
.token.attr-name,
.token.italic {
	font-style: italic;
}

.token.bold {
	font-weight: bold;
}

.token.function,
.token.class-name {
	color: var(--color-primary);
}

.token.selector,
.token.tag,
.token.attr-value,
.token.string,
.token.number {
	color: var(--color-accent);
}

// INLINE CODE
:not(pre) > code {
	border-radius: 6px;
	padding: 4px 6px;
	color: var(--color-primary);
	background-color: var(--color-grey-4);
}

pre > code {
	border-radius: var(--size-00);
	border: 2px solid var(--color-grey-2);
	color: var(--color-grey-0);
	background-color: var(--color-grey-4);
	padding: var(--size-1);
	font-size: var(--size-00);
	line-height: var(--lh-2);
}

pre[data-lang] > span {
	position: absolute;
	top: 2px;
	right: 2px;
	font-size: var(--size-000);
	font-family: var(--monospace);
	color: var(--color-grey-5);
	background-color: var(--color-grey-2);
	text-transform: uppercase;
	border-bottom-left-radius: var(--size-000);
	border-top-right-radius: var(--size-000);
	padding: 2px var(--size-0);
	line-height: var(--lh-1);
}
