// keyword: const, return, etc.
// operator: ==, >=, etc.
// punctuation: (, ), [, ], etc.
// parameter: inside function
// tag: <html tag/>
// function: object.fn
// string, number: primitives

.token {
	color: var(--color-gray-100);
}

.token.builtin,
.token.variable,
.token.operator,
.token.punctuation,
.token.attr-name,
.token.comment,
.token.keyword,
.token.important {
	color: var(--color-gray-300);
}

.token.comment,
.token.attr-name,
.token.italic {
	font-style: italic;
}

.token.bold {
	font-weight: bold;
}

.token.function,
.token.selector,
.token.tag,
.token.attr-value,
.token.string,
.token.number,
.token.class-name {
	color: var(--color-green);
}

// INLINE CODE
:not(pre) > code,
:not(pre) > code[class*='language-'] {
	color: var(--color-green);
	font-size: 0.825em;
	padding: 3px 6px;
	font-family: var(--monospace);
	display: inline-block;
	hyphens: none;
	background-color: var(--color-gray-400);
	transition: var(--transition);
	border-radius: var(--radius-0);
}

// CODE BLOCKS
pre {
	tab-size: 2;
	padding: var(--spacing-2);
	overflow: auto;
	color: var(--color-gray-100);
	font-size: var(--text-00);
	line-height: 1.4;
	position: relative;
	background-color: var(--color-gray-400);
	transition: var(--transition);

	> code {
		font-family: var(--monospace);
		tab-size: 2;
	}

	> code[data-lang]::before {
		content: attr(data-lang);
		position: absolute;
		top: 0;
		right: 0;
		padding: var(--spacing-000) var(--spacing-00);
		font-size: var(--text-000);
		background-color: var(--color-blue);
		border-bottom-left-radius: var(--radius-2);
	}
}

@media (max-width: 50rem) {
	pre {
		padding: var(--spacing-0);
	}
}
